"Andy Brown", "Moira Burke",
"Kunal Chawla", "Marzena Malenta")
mystery = nchar(udacious)
mystery
mystery == 11
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mean(mtcars$mpg)
summary(mtcars)
``'
``'
summary(mtcars)
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
summary(diamonds)
data(diamonds)
library(ggplot2)
data(diamonds)
str(diamonds)
library(ggplot2)
data(diamonds)
str(diamonds)
install.packages('ggplot2')
library(ggplot2)
data(diamonds)
str(diamonds)
(ggplot2) #must load the ggplot package first
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
summary(diamonds)
library(ggthemes)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
gplot(aes(x = price), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
(diamonds)
(diamonds)
library(ggthemes)
ggplot(aes(x = price), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
names(pf)
ggplot((x = price), data = diamonds)
ggplot(x = price), data = diamonds)
ggplot(aes(y = price, x = depth), data = diamonds) + geom_point()
ggplot(aes(y = price, x = depth), data = diamonds) + geom_point()
summary(mtcars)
``'
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
install.packages('ggplot2')
library(ggplot2)
data(pseudo_facebook)
str(pseudo_facebook)
```{r ggplot Syntax}
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
```{r Scatterplots}
```{r}
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv, sep = '/t')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
```{r}
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
```
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
library(ggplot2)
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
``{r}
pf <- read.csv('pseudo_facebook.tsv, sep = '\t')
gplot(x = age, y = friend_count, data = pf)
library(ggplot2)
```{r}
libraby(dplyr)
install.packages('dplyr')
libraby(dplyr)
library(dplyr)
age_groups <- group_by(pf, age)
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
library(psych)
library(GPArotation)
prosper = read.csv("prosperLoanData.csv")
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
library(RColorBrewer)
prosloan = read.csv("prosperLoanData.csv")
getwd()
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
prosloan = read.csv("prosperLoanData.csv")
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
prosloan = read.csv("prosperLoanData.csv")
prosloan = read.csv("prosperLoanData.csv")
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
prosloan = read.csv("prosperLoanData.csv")
```{r echo=FALSE, Load_the_Data}
getwd()
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
prosloan = read.csv("prosperLoanData.csv")
prosloan = read.csv("prosperLoanData.csv")
prosloan = read.csv("prosperLoanData.csv")
prosloan = read.csv("prosperLoanData.csv")
setwd("~/")
prosloan = read.csv("prosperLoanData.csv")
getwd()
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
prosloan = read.csv("C:/Users/Marcela/Desktop/Udacity/R/project/4/prosperLoanData.csv")
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
library(RColorBrewer)
prosloan = read.csv("prosperLoanData.csv")
prosloan = read.csv("C:/Users/Marcela/Desktop/Udacity/R/project/4/prosperLoanData.csv")
```{r echo=FALSE, Univariate_Plots}
ggplot(data = prosloan, aes(x = LoanOriginalAmount, y = StatedMonthlyIncome)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(data = prosloan, aes(x = LoanStatus)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Loan Status') +
xlab('Loan Status') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(data = prosloan, aes(IncomeRange)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Borrower Income Range') +
xlab('Income') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(aes(x = StatedMonthlyIncome), data = prosloan) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = prosloan, aes(x = ProsperScore)) +
geom_bar(color = "black", fill = '#007EE5') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6)) +
xlab("Score") + ggtitle("Prosper Score Distribution")
Sys.setlocale("LC_TIME", "C");
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = na.omit(prosloan), aes(ProsperRating.alpha)) +
geom_histogram(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
ggplot(data = na.omit(prosloan), aes(ProsperRating)) +
geom_bar(aes(fill = ProsperRating)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(data = prosloan, aes(x = LoanStatus)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Loan Status') +
xlab('Loan Status') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(data = prosloan, aes(x = MonthlyLoanPayment)) +
geom_bar(color = "black", fill = '#007EE5') +
theme(axis.text.x = element_text(angle = 40, vjust = 0.4)) +
xlab("Score") + ggtitle("MonthlyLoanPayment")
ggplot(aes(x=LoanOriginalAmount, y = NumberOfLoans),
data = prosloan(!is.na(MonthlyIncome)) +
geom_line(aes(color = MonthlyIncome), stat = 'summary', fun.y = median)
ggplot(aes(x = LoanOriginalAmount), data = prosloan) +
ggplot(data = prosloan, aes(x = StatedMonthlyIncome, y = LoanOriginalAmount)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(data = prosloan, aes(x = Occupation, y = IncomeRange)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(aes( x = EmploymentStatus,y = IncomeRange, fill = LoanOriginalAmount),
data = prosloan) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c('purple', 'yellow'))(100))
ggplot(aes( x = CreditGrade, y = IncomeRange, fill = LoanOriginalAmount),
data = prosloan) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c('blue', 'yellow'))(100))
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", aes(fill = "#FB8072")) +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count') +
scale_fill_manual(values=c("#E69F00", "#FB8072",  "#E69F00", "#56B4E9","#E69F00", "#E69F00", "#56B4E9","#E69F00", "#E69F00"))
ggplot(aes(x = EmploymentStatus, y = LoanOriginalAmount), data = na.omit(prosloan)) +
geom_boxplot() +
scale_y_continuous(limits = c(0,15000)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", fill = ) +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count') +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(all_states,aes(x=long, y=lat, group=group, fill=IncomeRange) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="Income by State",x="",y="")+
theme_bw()
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", aes(fill = IsBorrowerHomeowner)) +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')+
scale_fill_brewer(palette="Dark2")
prosloan$Term <- factor(prosloan$Term)
ggplot(data = prosloan, aes(x = Term, ymax = max(..count..))) +
geom_bar(fill='#007EE5') +
stat_bin(geom="text", size = 4, aes(label=..count.., vjust=-0.9)) +
ggtitle("Length of the Loan")
ggplot(aes(y = EstimatedLoss, x = Term), data = prosloan) +
geom_boxplot()
ggplot(aes(y = EstimatedReturn, x = Term), data = prosloan) +
geom_boxplot()
ggplot(prosloan, aes(as.factor(LoanOriginationDate.year))) +
geom_histogram(color = 'black', fill = '#007EE5') +
ggtitle('Number of Loans by Year') +
stat_bin(geom="text", aes(label=..count.., vjust=-0.9, hjust=0.5)) +
xlab('Year') +
ylab('Number of Loans')
prosloanTerm <- factor(prosloan$Term)
prosloanTerm <- factor(prosloan$Term)
ggplot(data = prosloan, aes(x = Term, ymax = max(..count..))) +
geom_bar(fill='#007EE5') +
stat_bin(geom="text", size = 4, aes(label=..count.., vjust=-0.9)) +
ggtitle("Length of the Loan")
ggplot(data = prosloan, aes(x = Term, ymax = max(..count..))) +
geom_histogram(fill='#007EE5') +
stat_bin(geom="text", size = 4, aes(label=..count.., vjust=-0.9)) +
ggtitle("Length of the Loan")
ggplot(data = prosloan, aes(x = Term, ymax = max(..count..))) +
geom_line(fill='#007EE5') +
stat_bin(geom="text", size = 4, aes(label=..count.., vjust=-0.9)) +
ggtitle("Length of the Loan")
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
chooseCRANmirror(graphics=FALSE, ind=1)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
library(RColorBrewer)
getwd()
setwd("C:/Users/Marcela/Desktop/Udacity/R/project/4")
# Load the Data
prosloan = read.csv("C:/Users/Marcela/Desktop/Udacity/R/project/4/prosperLoanData.csv")
ggplot(aes(x = LoanOriginalAmount), data = prosloan) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = prosloan, aes(x = LoanStatus)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Loan Status') +
xlab('Loan Status') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
summary(prosloan$IsBorrowerHomeowner)
ggplot(data = prosloan, aes(x = IsBorrowerHomeowner)) +
geom_bar(color="black", aes(fill = IsBorrowerHomeowner)) +
ggtitle('Is Borrower Home Owner') +
xlab('Is Borrower Home Owner') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')+
scale_fill_brewer(palette="Dark2")
ggplot(data = prosloan, aes(IncomeRange)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Borrower Income Range') +
xlab('Income') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(aes(x = StatedMonthlyIncome), data = prosloan) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = prosloan, aes(IncomeRange)) +
geom_bar(color="black", fill = '#007EE5') +
ggtitle('Borrower Income Range') +
xlab('Income') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
ggplot(data = prosloan, aes(x = ProsperScore)) +
geom_bar(color = "black", fill = '#007EE5') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6)) +
xlab("Score") + ggtitle("Prosper Score Distribution")
summary(prosloan$ProsperScore)
prosloan$ProsperRating <-factor(prosloan$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
prosloan$LoanOriginationDate.month=format(prosloan$LoanOriginationDate, "(%m) %b")
Sys.setlocale("LC_TIME", "C");
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prosloan$ProsperRating <-factor(prosloan$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Sys.setlocale("LC_TIME", "C");
prosloan$LoanOriginationDate.month=format(prosloan$LoanOriginationDate, "(%m) %b")
prosloan$ProsperRating <-factor(prosloan$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prosloan$ProsperRating <-factor(prosloan$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prosloan$ProsperRating.alpha = factor(prosloan$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR","NA"))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prosloan$ProsperRating <-factor(prosloan$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = na.omit(prosloan), aes(ProsperRating)) +
geom_bar(aes(fill = ProsperRating)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
ggplot(data = prosloan, aes(x = MonthlyLoanPayment)) +
geom_bar(color = "black", fill = '#007EE5') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6)) +
xlab("Score") + ggtitle("MonthlyLoanPayment")
summary(prosloan$MonthlyLoanPayment)
ggplot(aes(x = LoanOriginalAmount), data = prosloan) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosloan$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(aes(x = LoanOriginalAmount), data = prosloan) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosloan$LP_InterestandFees, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosloan$LP_InterestandFees, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
prosloan$ProsperRating.alpha = factor(prosloan$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR","NA"))
prosloan$LoanOriginationDate <- as.POSIXct(prosloan$LoanOriginationDate,
format="%Y-%m-%d")
prosloan$LoanOriginationDate.year <-prosloan$LoanOriginationDate %>%
format('%Y') %>% strtoi()
ggplot(data = prosloan, aes(x = StatedMonthlyIncome, y = LoanOriginalAmount)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(aes(y = EstimatedLoss, x = Term), data = prosloan) +
geom_boxplot()
ggplot(aes(y = EstimatedReturn, x = Term), data = prosloan) +
geom_boxplot()
ggplot(data = prosloan, aes(x = LoanOriginalAmount, y = MonthlyLoanPayment)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(data = prosloan, aes(x = LoanOriginalAmount, y = StatedMonthlyIncome)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(data = prosloan, aes(x = Occupation, y = IncomeRange)) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 11))
ggplot(data = prosloan, aes(x = Occupation, y = LoanOriginalAmount)) +
geom_boxplot() +
xlab("Prosper Rating") +
ggtitle("Borrower Rate for Different Prosper Rating")
ggplot(aes( x = ProsperRating,y = Term, fill = LoanOriginalAmount),
data = prosloan) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c('lightpink', 'yellow'))(100))
ggplot(data = prosloan, aes(x = EmploymentStatus, y = LoanOriginalAmount)) +
geom_boxplot() +
xlab("Prosper Rating") +
ggtitle("Borrower Rate for Different Prosper Rating")
display.brewer.all()
brewer.pal(4, 'Set3')
ggplot(aes( x = CreditGrade, y = IncomeRange, fill = LoanOriginalAmount),
data = prosloan) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c('lightgreen', 'blue'))(100))
ggplot(aes( x = EmploymentStatus,y = IncomeRange, fill = LoanOriginalAmount),
data = prosloan) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c('lightblue', 'purple'))(100))
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prosloan$LoanOriginationDate.month=format(prosloan$LoanOriginationDate, "(%m) %b")
months <- c('1', '2', '3', '4', '5', '6',
'7', '8', '9', '10', '11', '12')
ggplot(prosloan, aes(LoanOriginationDate.month)) +
geom_histogram(stat="Count", color = 'black', fill = '#007EE5') +
facet_wrap(~LoanOriginationDate.year) +
ggtitle('Number of Loans by Month') +
xlab('Month') +
ylab('Number of Loans') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
